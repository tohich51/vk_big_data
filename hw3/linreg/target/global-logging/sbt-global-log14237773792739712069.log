[0m[[0m[0mdebug[0m] [0m[0m> Exec(reload, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(sbtStashOnFailure, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(onFailure loadFailed, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(loadp, None, None)[0m
[0m[[0m[0minfo[0m] [0m[0mwelcome to sbt 1.8.0 (Oracle Corporation Java 15.0.1)[0m
[0m[[0m[0mdebug[0m] [0m[0m                  Load.loadUnit: plugins took 14.230129ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                  Load.loadUnit: defsScala took 0.002317ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Scanning directory /Users/oscar/.sbt/1.0/plugins[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Found non-root projects [0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /Users/oscar/.sbt/1.0/plugins, returning: ()[0m
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))[0m
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)[0m
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 0.949099 ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                      Load.resolveProject(global-plugins) took 0.854496ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                    Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /Users/oscar/.sbt/1.0/plugins, plugins: List(<none>))) took 2.109222ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /Users/oscar/.sbt/1.0/plugins, returning: (global-plugins)[0m
[0m[[0m[0mdebug[0m] [0m[0m                  Load.loadUnit: loadedProjectsRaw took 3.392949ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                  Load.loadUnit: cleanEvalClasses took 0.008206ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                Load.loadUnit(file:/Users/oscar/.sbt/1.0/plugins/, ...) took 18.045072ms[0m
[0m[[0m[0mdebug[0m] [0m[0m              Load.apply: load took 19.023777ms[0m
[0m[[0m[0mdebug[0m] [0m[0m              Load.apply: resolveProjects took 0.077778ms[0m
[0m[[0m[0mdebug[0m] [0m[0m              Load.apply: finalTransforms took 8.1766ms[0m
[0m[[0m[0mdebug[0m] [0m[0m              Load.apply: config.delegates took 0.282897ms[0m
[0m[[0m[0mdebug[0m] [0m[0m              Load.apply: Def.make(settings)... took 61.129565ms[0m
[0m[[0m[0mdebug[0m] [0m[0m              Load.apply: structureIndex took 41.360323ms[0m
[0m[[0m[0mdebug[0m] [0m[0m              Load.apply: mkStreams took 0.002719ms[0m
[0m[[0m[0minfo[0m] [0m[0mloading global plugins from /Users/oscar/.sbt/1.0/plugins[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[0mdebug[0m] [0m[0mForcing garbage collection...[0m
[0m[[0m[0mdebug[0m] [0m[0m            Load.defaultLoad until apply took 421.074191ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                      Load.loadUnit: plugins took 12.726341ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                      Load.loadUnit: defsScala took 0.002519ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Scanning directory /Users/oscar/Documents/MADE/2022/Big Data/hw3/linreg/project[0m
[0m[[0m[0mdebug[0m] [0m[0m                        Load.loadUnit: mkEval took 0.155099ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Found non-root projects [0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /Users/oscar/Documents/MADE/2022/Big Data/hw3/linreg/project, returning: ()[0m
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))[0m
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)[0m
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 1.203302 ms[0m
[0m[[0m[0minfo[0m] [0m[0mloading settings for project linreg-build from idea1.sbt ...[0m
[0m[[0m[0mdebug[0m] [0m[0m                          Load.resolveProject(linreg-build) took 1.228173ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                        Load.loadTransitive: finalizeProject(Project(id linreg-build, base: /Users/oscar/Documents/MADE/2022/Big Data/hw3/linreg/project, plugins: List(<none>))) took 2.774434ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /Users/oscar/Documents/MADE/2022/Big Data/hw3/linreg/project, returning: (linreg-build)[0m
[0m[[0m[0mdebug[0m] [0m[0m                      Load.loadUnit: loadedProjectsRaw took 15.035194ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                      Load.loadUnit: cleanEvalClasses took 0.595799ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                    Load.loadUnit(file:/Users/oscar/Documents/MADE/2022/Big%20Data/hw3/linreg/project/, ...) took 28.80447ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                  Load.apply: load took 29.833735ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                  Load.apply: resolveProjects took 0.085001ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                  Load.apply: finalTransforms took 7.283823ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                  Load.apply: config.delegates took 0.289756ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                  Load.apply: Def.make(settings)... took 46.636263ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                  Load.apply: structureIndex took 24.40584ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                  Load.apply: mkStreams took 0.001941ms[0m
[0m[[0m[0minfo[0m] [0m[0mloading project definition from /Users/oscar/Documents/MADE/2022/Big Data/hw3/linreg/project[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[0mdebug[0m] [0m[0m                Load.loadUnit: plugins took 209.641792ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                Load.loadUnit: defsScala took 0.006517ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Scanning directory /Users/oscar/Documents/MADE/2022/Big Data/hw3/linreg[0m
[0m[[0m[0mdebug[0m] [0m[0m                  Load.loadUnit: mkEval took 0.162801ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Found non-root projects [0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /Users/oscar/Documents/MADE/2022/Big Data/hw3/linreg, returning: ()[0m
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))[0m
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)[0m
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 0.848416 ms[0m
[0m[[0m[0minfo[0m] [0m[0mloading settings for project linreg from build.sbt ...[0m
[0m[[0m[0mdebug[0m] [0m[0m                    Load.resolveProject(linreg) took 22.970572ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                  Load.loadTransitive: finalizeProject(Project(id linreg, base: /Users/oscar/Documents/MADE/2022/Big Data/hw3/linreg, plugins: List(<none>))) took 24.405555ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /Users/oscar/Documents/MADE/2022/Big Data/hw3/linreg, returning: (linreg)[0m
[0m[[0m[0mdebug[0m] [0m[0m                Load.loadUnit: loadedProjectsRaw took 875.477408ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                Load.loadUnit: cleanEvalClasses took 6.592888ms[0m
[0m[[0m[0mdebug[0m] [0m[0m              Load.loadUnit(file:/Users/oscar/Documents/MADE/2022/Big%20Data/hw3/linreg/, ...) took 1092.27188ms[0m
[0m[[0m[0mdebug[0m] [0m[0m            Load.apply: load took 1093.411197ms[0m
[0m[[0m[0mdebug[0m] [0m[0m            Load.apply: resolveProjects took 0.072902ms[0m
[0m[[0m[0mdebug[0m] [0m[0m            Load.apply: finalTransforms took 21.056692ms[0m
[0m[[0m[0mdebug[0m] [0m[0m            Load.apply: config.delegates took 0.228525ms[0m
[0m[[0m[0mdebug[0m] [0m[0m            Load.apply: Def.make(settings)... took 46.531585ms[0m
[0m[[0m[0mdebug[0m] [0m[0m            Load.apply: structureIndex took 29.86409ms[0m
[0m[[0m[0mdebug[0m] [0m[0m            Load.apply: mkStreams took 0.002167ms[0m
[0m[[0m[0minfo[0m] [0m[0mset current project to linreg (in build file:/Users/oscar/Documents/MADE/2022/Big%20Data/hw3/linreg/)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(sbtPopOnFailure, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(resumeFromFailure, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(resumeFromFailure, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(resumeFromFailure, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(notifyUsersAboutShell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(iflast shell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(; set ideaPort in Global := 65058 ; idea-shell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(set ideaPort in Global := 65058, None, None)[0m
[0m[[0m[0minfo[0m] [0m[0mDefining Global / ideaPort[0m
[0m[[0m[0minfo[0m] [0m[0mThe new value will be used by Compile / compile, Test / compile[0m
[0m[[0m[0mdebug[0m] [0m[0mDefining [0m
[0m[[0m[0mdebug[0m] [0m[0m	Global / ideaPort[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mThe new value will be used by [0m
[0m[[0m[0mdebug[0m] [0m[0m	Compile / compile[0m
[0m[[0m[0mdebug[0m] [0m[0m	Test / compile[0m
[0m[[0m[0minfo[0m] [0m[0mReapplying settings...[0m
[0m[[0m[0minfo[0m] [0m[0mset current project to linreg (in build file:/Users/oscar/Documents/MADE/2022/Big%20Data/hw3/linreg/)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(idea-shell, None, None)[0m
